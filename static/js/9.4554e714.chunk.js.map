{"version":3,"sources":["components/Post/InfinitePosts.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","functions/prettierTitle.js","functions/changeDateType.js","components/Post/PostPrev.js"],"names":["InfinitePosts","className","type","categoryId","postsContainer","useRef","useState","posts","isLoading","countPosts","data","setData","offset","setOffset","newVisit","setNewVisit","timeoutId","setTimeoutId","isError","setIsError","console","log","addOffset","POSTS_PER_PAGE","intersectionObserver","IntersectionObserver","entries","intersectionRatio","currentTimeoutId","setTimeout","useEffect","sessionStorage","getItem","cachedData","JSON","parse","length","abortController","AbortController","signal","loadPosts","a","ENDPOINT","API","fetch","response","ok","json","parseInt","headers","get","observe","current","abort","disconnect","clearTimeout","handleCache","setItem","stringify","map","post","index","key","ref","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","prettierTitle","title","toLowerCase","indexOf","replace","toUpperCase","slice","changeDateType","date","dateArr","split","PostPrev","images","image","setImage","id","loadImage","to","slug","onClick","undefined","media_details","sizes","large","alt","height","full","src","source_url","width","effect","rendered"],"mappings":"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","file":"static/js/9.4554e714.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { API, POSTS_PER_PAGE } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nimport PostPrev from \"./PostPrev\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\n\r\nconst InfinitePosts = ({ className, type = \"home\", categoryId = 0 }) => {\r\n  const TIMEOUT = 1000;\r\n  const postsContainer = useRef();\r\n\r\n  const [data, setData] = useState({\r\n    posts: [],\r\n    isLoading: true,\r\n    countPosts: 0,\r\n  });\r\n  const [offset, setOffset] = useState(0);\r\n  const [newVisit, setNewVisit] = useState(true);\r\n  const [timeoutId, setTimeoutId] = useState(0);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  console.log(categoryId)\r\n\r\n  const addOffset = () => setOffset(offset + POSTS_PER_PAGE);\r\n\r\n  const intersectionObserver = new IntersectionObserver((entries) => {\r\n    if (entries[0].intersectionRatio > 0) {\r\n      const currentTimeoutId = setTimeout(addOffset, TIMEOUT);\r\n      setTimeoutId(currentTimeoutId);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (type !== \"home\") {\r\n      setData({ posts: [], isLoading: true, countPosts: 0 });\r\n      setOffset(0);\r\n    }\r\n  }, [categoryId, type]);\r\n\r\n  useEffect(() => {\r\n    if (type === \"home\") {\r\n      if (sessionStorage.getItem(`${type}`) && newVisit) {\r\n        const cachedData = JSON.parse(sessionStorage.getItem(`${type}`));\r\n        setData({\r\n          posts: [...cachedData.posts],\r\n          isLoading: false,\r\n          countPosts: JSON.parse(sessionStorage.getItem(\"countPosts\")),\r\n        });\r\n        setOffset(cachedData.posts.length);\r\n      }\r\n    }\r\n  }, [newVisit, type]);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    const loadPosts = async () => {\r\n      let ENDPOINT = `${API}posts?per_page=${POSTS_PER_PAGE}&offset=${offset}`;\r\n\r\n      if (type === \"category\") ENDPOINT += `&categories=${categoryId}`;\r\n      else if (type === \"tag\") ENDPOINT += `&tags=${categoryId}`;\r\n\r\n      try {\r\n        const response = await fetch(ENDPOINT, {\r\n          signal: signal,\r\n        });\r\n\r\n        if (!response.ok) return;\r\n\r\n        if (isError) setIsError(false);\r\n\r\n        setData({\r\n          posts: [...data.posts, ...(await response.json())],\r\n          isLoading: false,\r\n          countPosts: parseInt(response.headers.get(\"X-WP-Total\"), 10),\r\n        });\r\n      } catch {\r\n        setIsError(true);\r\n      }\r\n    };\r\n\r\n    if (!isError) {\r\n      if (!data.isLoading && data.countPosts === data.posts.length) return;\r\n\r\n      if (data.posts.length <= data.countPosts) {\r\n        intersectionObserver.observe(postsContainer.current);\r\n\r\n        if (type === \"home\") {\r\n          if (!sessionStorage.getItem(`${type}`)) loadPosts();\r\n          else if (!newVisit) loadPosts();\r\n        } else {\r\n          loadPosts();\r\n          setNewVisit(false);\r\n        }\r\n      }\r\n\r\n      if (sessionStorage.getItem(`${type}`) && newVisit) setNewVisit(false);\r\n    }\r\n\r\n    return () => {\r\n      abortController.abort();\r\n      intersectionObserver.disconnect();\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [offset]);\r\n\r\n  const handleCache = () => {\r\n    type === \"home\" && sessionStorage.setItem(`${type}`, JSON.stringify(data));\r\n    clearTimeout(timeoutId);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      {data.isLoading ? (\r\n        <Preloader />\r\n      ) : data.posts.length === 0 ? (\r\n        <p>Brak post√≥w</p>\r\n      ) : (\r\n        data.posts.map((post, index) => {\r\n          return (\r\n            <LazyLoadComponent key={index}>\r\n              <PostPrev post={post} handleCache={handleCache} />\r\n            </LazyLoadComponent>\r\n          );\r\n        })\r\n      )}\r\n      <div ref={postsContainer}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfinitePosts;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const prettierTitle = (title) => {\r\n    title = title.toLowerCase();\r\n\r\n    if (title.indexOf(\"&#8220;\") !== -1) title = title.replace(/&#8220;/g, `\"`);\r\n    if (title.indexOf(\"&#8221;\") !== -1) title = title.replace(/&#8221;/g, `\"`);\r\n    if (title.indexOf(\"&#8211;\") !== -1) title = title.replace(/&#8211;/g, `-`);\r\n    \r\n    return `${title[0].toUpperCase()}${title.slice(1)}`; \r\n}\r\n \r\nexport default prettierTitle;","const changeDateType = (date) => {\r\n    const dateArr = date.split(\"T\");\r\n    return `${dateArr[0].split(\"-\")[2]}-${dateArr[0].split(\"-\")[1]}-${dateArr[0].split(\"-\")[0]}`\r\n}\r\n\r\nexport default changeDateType;","import React, { useState, useEffect } from \"react\";\r\nimport prettierTitle from \"../../functions/prettierTitle\";\r\nimport changeDateType from \"../../functions/changeDateType\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\r\n\r\nconst PostPrev = ({ post, handleCache }) => {\r\n  const [image, setImage] = useState({ images: [], isLoading: true });\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem(`image-${post.id}`)) {\r\n      setImage({ images: JSON.parse(sessionStorage.getItem(`image-${post.id}`)), isLoading: false });\r\n      return;\r\n    }\r\n\r\n    const loadImage = async () => {\r\n      try {\r\n        const response = await fetch(`${API}media?parent=${post.id}`);\r\n        if (!response.ok) return;\r\n\r\n        const data = await response.json();\r\n\r\n\r\n        sessionStorage.setItem(`image-${post.id}`, JSON.stringify(data));\r\n        setImage({ images: data, isLoading: false });\r\n      } catch {\r\n        return;\r\n      }\r\n    };\r\n\r\n    loadImage();\r\n  }, [post]);\r\n\r\n  return (\r\n    <Link to={`/wpisy/${post.slug}`} className=\"postPrev\" onClick={handleCache}>\r\n      <div className=\"postPrev__content\">\r\n        {image.isLoading ? (\r\n          <Preloader />\r\n        ) : image.images[0] !== undefined &&\r\n          image.images[0].media_details.sizes.large === undefined ? (\r\n          <LazyLoadImage\r\n            alt={image.images[0].slug}\r\n            height={image.images[0].media_details.sizes.full.height}\r\n            src={image.images[0].media_details.sizes.full.source_url}\r\n            width={image.images[0].media_details.sizes.full.width}\r\n            effect=\"blur\"\r\n          />\r\n        ) : (\r\n          image.images[0] !== undefined && (\r\n            <LazyLoadImage\r\n              alt={image.images[0].slug}\r\n              height={image.images[0].media_details.sizes.large.height}\r\n              src={image.images[0].media_details.sizes.large.source_url}\r\n              width={image.images[0].media_details.sizes.large.width}\r\n              effect=\"blur\"\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n      <h3 className=\"postPrev__title\">{prettierTitle(post.title.rendered)}</h3>\r\n      <p className=\"postPrev__date\">\r\n        {changeDateType(post.date)}&nbsp;<i className=\"icon-calendar\"></i>\r\n      </p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostPrev;\r\n"],"sourceRoot":""}