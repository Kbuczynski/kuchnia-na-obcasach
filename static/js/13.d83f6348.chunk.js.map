{"version":3,"sources":["components/Post/Post.js","functions/prettierTitle.js"],"names":["PostContent","lazy","Post","slug","match","params","useState","post","isLoading","data","setData","useEffect","document","title","prettierTitle","replace","a","fetch","API","response","ok","json","loadPosts","length","fallback","to","pathname","indexOf"],"mappings":"0NAKMA,EAAcC,gBAAK,kBAAM,8DAoDhBC,UAlDF,SAAC,GAIP,IAFOC,EAER,EAHJC,MACEC,OAAUF,KAER,EACoBG,mBAAS,CAC/BC,KAAM,GACNC,WAAW,IAHT,mBACGC,EADH,KACSC,EADT,KA8BJ,OAxBAC,qBAAU,WACRC,SAASC,MAAT,UAAoBC,YAAcX,GAAMY,QACtC,KACA,KAFF,4BAIC,CAACZ,IAEJQ,qBAAU,YACO,uCAAG,4BAAAK,EAAA,+EAESC,MAAM,GAAD,OAAIC,IAAJ,sBAAqBf,IAFnC,WAERgB,EAFQ,QAGAC,GAHA,gCAGUV,EAAQ,CAAEH,KAAM,GAAIC,WAAW,IAHzC,mBAIdE,EAJc,UAKAS,EAASE,OALT,0BAKZd,KALY,KAMZC,WAAW,IANC,iFASRE,EAAQ,CAAEH,KAAM,GAAIC,WAAW,IATvB,0DAAH,qDAafc,KACC,CAACnB,IAECM,EAAKD,WAAkC,IAArBC,EAAKF,KAAKgB,OAI/B,oCACGd,EAAKD,UACJ,kBAAC,IAAD,MAEA,kBAAC,WAAD,CAAUgB,SAAU,kBAAC,IAAD,OAClB,kBAACxB,EAAD,CAAaO,KAAME,EAAKF,KAAK,OAR5B,kBAAC,IAAD,CAAUkB,GAAI,CAAEC,SAAU,Y,gCClCtBZ,IARO,SAACD,GAKnB,OAJkC,IAA9BA,EAAMc,QAAQ,aAAmBd,EAAQA,EAAME,QAAQ,WAAd,OACX,IAA9BF,EAAMc,QAAQ,aAAmBd,EAAQA,EAAME,QAAQ,WAAd,OACX,IAA9BF,EAAMc,QAAQ,aAAmBd,EAAQA,EAAME,QAAQ,WAAd,MAEtCF","file":"static/js/13.d83f6348.chunk.js","sourcesContent":["import React, { useState, useEffect, Suspense, lazy } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { API } from \"../../data\";\nimport Preloader from \"../Preloader\";\nimport prettierTitle from \"../../functions/prettierTitle\";\nconst PostContent = lazy(() => import(\"./PostContent\"));\n\nconst Post = ({\n  match: {\n    params: { slug },\n  },\n}) => {\n  const [data, setData] = useState({\n    post: [],\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    document.title = `${prettierTitle(slug).replace(\n      /-/g,\n      \" \"\n    )} - Kuchnia na obcasach`;\n  }, [slug]);\n\n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const response = await fetch(`${API}posts?slug=${slug}`);\n        if (!response.ok) await setData({ post: [], isLoading: false });\n        setData({\n          post: await response.json(),\n          isLoading: false,\n        });\n      } catch {\n        await setData({ post: [], isLoading: false });\n      }\n    };\n\n    loadPosts();\n  }, [slug]);\n\n  if (!data.isLoading && data.post.length === 0)\n    return <Redirect to={{ pathname: \"/404\" }} />;\n\n  return (\n    <>\n      {data.isLoading ? (\n        <Preloader />\n      ) : (\n        <Suspense fallback={<Preloader />}>\n          <PostContent post={data.post[0]} />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default Post;\n","const prettierTitle = (title) => {\n    if (title.indexOf(\"&#8220;\") !== -1) title = title.replace(/&#8220;/g, `\"`);\n    if (title.indexOf(\"&#8221;\") !== -1) title = title.replace(/&#8221;/g, `\"`);\n    if (title.indexOf(\"&#8211;\") !== -1) title = title.replace(/&#8211;/g, `-`);\n    \n    return title;\n}\n \nexport default prettierTitle;"],"sourceRoot":""}