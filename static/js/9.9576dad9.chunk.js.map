{"version":3,"sources":["components/Post/InfinitePosts.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","functions/prettierTitle.js","functions/changeDateType.js","components/Post/PostPrev.js"],"names":["InfinitePosts","className","type","categoryId","postsContainer","useRef","useState","posts","isLoading","countPosts","data","setData","offset","setOffset","oldCatId","setOldCatId","newVisit","setNewVisit","timeoutId","setTimeoutId","isError","setIsError","useEffect","abortController","AbortController","signal","loadPosts","a","ENDPOINT","API","POSTS_PER_PAGE","fetch","response","ok","json","parseInt","headers","get","addOffset","intersectionObserver","IntersectionObserver","entries","intersectionRatio","currentTimeoutId","setTimeout","sessionStorage","getItem","cachedData","JSON","parse","length","window","location","reload","observe","current","abort","disconnect","clearTimeout","handleCache","setItem","stringify","ref","map","post","index","key","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","prettierTitle","title","toLowerCase","indexOf","replace","toUpperCase","slice","changeDateType","date","dateArr","split","PostPrev","images","image","setImage","id","loadImage","to","slug","onClick","undefined","media_details","sizes","large","alt","height","full","src","source_url","width","effect","rendered"],"mappings":"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","file":"static/js/9.9576dad9.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { API, POSTS_PER_PAGE } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nimport PostPrev from \"./PostPrev\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\n\r\nconst InfinitePosts = ({ className, type = \"home\", categoryId = 0 }) => {\r\n  const TIMEOUT = 3000;\r\n  const postsContainer = useRef();\r\n\r\n  const [data, setData] = useState({\r\n    posts: [],\r\n    isLoading: true,\r\n    countPosts: 0,\r\n  });\r\n  const [offset, setOffset] = useState(0);\r\n  const [oldCatId, setOldCatId] = useState(categoryId);\r\n  const [newVisit, setNewVisit] = useState(true);\r\n  const [timeoutId, setTimeoutId] = useState(0);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    const loadPosts = async () => {\r\n      let ENDPOINT = `${API}posts?per_page=${POSTS_PER_PAGE}&offset=${offset}`;\r\n\r\n      if (type === \"category\") ENDPOINT += `&categories=${oldCatId}`;\r\n      else if (type === \"tag\") ENDPOINT += `&tags=${oldCatId}`;\r\n\r\n      try {\r\n        const response = await fetch(ENDPOINT, {\r\n          signal: signal,\r\n        });\r\n\r\n        if (!response.ok) return;\r\n\r\n        if (isError) setIsError(false);\r\n\r\n        setData({\r\n          posts: [...data.posts, ...(await response.json())],\r\n          isLoading: false,\r\n          countPosts: parseInt(response.headers.get(\"X-WP-Total\"), 10),\r\n        });\r\n      } catch {\r\n        setIsError(true);\r\n      }\r\n    };\r\n\r\n    const addOffset = () => setOffset(offset + POSTS_PER_PAGE);\r\n\r\n    const intersectionObserver = new IntersectionObserver((entries) => {\r\n      if (entries[0].intersectionRatio > 0) {\r\n        const currentTimeoutId = setTimeout(addOffset, TIMEOUT);\r\n        setTimeoutId(currentTimeoutId);\r\n      }\r\n    });\r\n\r\n    if (sessionStorage.getItem(`${type}`) && newVisit) {\r\n      const cachedData = JSON.parse(sessionStorage.getItem(`${type}`));\r\n      setData({\r\n        posts: [...cachedData.posts],\r\n        isLoading: false,\r\n        countPosts: JSON.parse(sessionStorage.getItem(\"countPosts\")),\r\n      });\r\n      setOffset(cachedData.posts.length);\r\n    }\r\n\r\n    if (!isError) {\r\n      if (\r\n        !data.isLoading &&\r\n        data.countPosts === data.posts.length &&\r\n        categoryId === oldCatId\r\n      )\r\n        return;\r\n\r\n      if (data.posts.length <= data.countPosts || categoryId !== oldCatId) {\r\n        if (categoryId !== oldCatId) {\r\n          window.location.reload();\r\n          setOldCatId(categoryId);\r\n        }\r\n        intersectionObserver.observe(postsContainer.current);\r\n\r\n        if (!sessionStorage.getItem(`${type}`)) loadPosts();\r\n        else if (!newVisit) loadPosts();\r\n      }\r\n\r\n      if (sessionStorage.getItem(`${type}`) && newVisit) setNewVisit(false);\r\n    }\r\n\r\n    return () => {\r\n      abortController.abort();\r\n      intersectionObserver.disconnect();\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [offset, categoryId, type]);\r\n\r\n  const handleCache = () => {\r\n    type === \"home\" && sessionStorage.setItem(`${type}`, JSON.stringify(data));\r\n    clearTimeout(timeoutId);\r\n  };\r\n\r\n  return (\r\n    <div className={className} ref={postsContainer}>\r\n      {data.isLoading ? (\r\n        <Preloader />\r\n      ) : data.posts.length === 0 ? (\r\n        <p>Brak post√≥w</p>\r\n      ) : (\r\n        data.posts.map((post, index) => {\r\n          return (\r\n            <LazyLoadComponent key={index}>\r\n              <PostPrev post={post} handleCache={handleCache} />\r\n            </LazyLoadComponent>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfinitePosts;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const prettierTitle = (title) => {\r\n    title = title.toLowerCase();\r\n\r\n    if (title.indexOf(\"&#8220;\") !== -1) title = title.replace(/&#8220;/g, `\"`);\r\n    if (title.indexOf(\"&#8221;\") !== -1) title = title.replace(/&#8221;/g, `\"`);\r\n    if (title.indexOf(\"&#8211;\") !== -1) title = title.replace(/&#8211;/g, `-`);\r\n    \r\n    return `${title[0].toUpperCase()}${title.slice(1)}`; \r\n}\r\n \r\nexport default prettierTitle;","const changeDateType = (date) => {\r\n    const dateArr = date.split(\"T\");\r\n    return `${dateArr[0].split(\"-\")[2]}-${dateArr[0].split(\"-\")[1]}-${dateArr[0].split(\"-\")[0]}`\r\n}\r\n\r\nexport default changeDateType;","import React, { useState, useEffect } from \"react\";\r\nimport prettierTitle from \"../../functions/prettierTitle\";\r\nimport changeDateType from \"../../functions/changeDateType\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst PostPrev = ({ post, handleCache }) => {\r\n  const [image, setImage] = useState({ images: [], isLoading: true });\r\n\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      try {\r\n        const response = await fetch(`${API}media?parent=${post.id}`);\r\n        if (!response.ok) return;\r\n        setImage({ images: await response.json(), isLoading: false });\r\n      } catch {\r\n        return;\r\n      }\r\n    };\r\n\r\n    loadImage();\r\n  }, [post]);\r\n  \r\n  return (\r\n    <Link to={`/wpisy/${post.slug}`} className=\"postPrev\" onClick={handleCache}>\r\n      <div className=\"postPrev__content\">\r\n        {image.isLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          image.images[0] !== undefined && \r\n          image.images[0].media_details.sizes.large === undefined ?\r\n          <LazyLoadImage\r\n            alt={image.images[0].slug}\r\n            height={image.images[0].media_details.sizes.full.height}\r\n            src={image.images[0].media_details.sizes.full.source_url}\r\n            width={image.images[0].media_details.sizes.full.width}\r\n            effect=\"blur\"\r\n          />\r\n          :\r\n          image.images[0] !== undefined &&\r\n          <LazyLoadImage\r\n            alt={image.images[0].slug}\r\n            height={image.images[0].media_details.sizes.large.height}\r\n            src={image.images[0].media_details.sizes.large.source_url}\r\n            width={image.images[0].media_details.sizes.large.width}\r\n            effect=\"blur\"\r\n          />\r\n        )}\r\n      </div>\r\n      <h3 className=\"postPrev__title\">{prettierTitle(post.title.rendered)}</h3>\r\n      <p className=\"postPrev__date\">\r\n        {changeDateType(post.date)}&nbsp;<i className=\"icon-calendar\"></i>\r\n      </p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostPrev;\r\n"],"sourceRoot":""}