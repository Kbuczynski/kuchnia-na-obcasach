{"version":3,"sources":["components/Post/Post.js"],"names":["PostContent","lazy","Post","slug","match","params","useState","post","isLoading","data","setData","useEffect","a","fetch","API","response","ok","json","loadPosts","length","fallback","to","pathname"],"mappings":"oNAIMA,EAAcC,gBAAK,kBAAM,8DA6ChBC,UA3CF,SAAC,GAIP,IAFOC,EAER,EAHJC,MACEC,OAAUF,KAER,EACoBG,mBAAS,CAC/BC,KAAM,GACNC,WAAW,IAHT,mBACGC,EADH,KACSC,EADT,KAuBJ,OAjBAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAESC,MAAM,GAAD,OAAIC,IAAJ,sBAAqBX,IAFnC,WAERY,EAFQ,QAGAC,GAHA,gCAGUN,EAAQ,CAAEH,KAAM,GAAIC,WAAW,IAHzC,mBAIdE,EAJc,UAKAK,EAASE,OALT,0BAKZV,KALY,KAMZC,WAAW,IANC,iFASRE,EAAQ,CAAEH,KAAM,GAAIC,WAAW,IATvB,0DAAH,qDAafU,KACC,CAACf,IAECM,EAAKD,WAAkC,IAArBC,EAAKF,KAAKY,OAI/B,oCACGV,EAAKD,UACJ,kBAAC,IAAD,MAEA,kBAAC,WAAD,CAAUY,SAAU,kBAAC,IAAD,OAClB,kBAACpB,EAAD,CAAaO,KAAME,EAAKF,KAAK,OAR5B,kBAAC,IAAD,CAAUc,GAAI,CAAEC,SAAU","file":"static/js/13.7ac545c5.chunk.js","sourcesContent":["import React, { useState, useEffect, Suspense, lazy } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { API } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nconst PostContent = lazy(() => import(\"./PostContent\"));\r\n\r\nconst Post = ({\r\n  match: {\r\n    params: { slug },\r\n  },\r\n}) => {\r\n  const [data, setData] = useState({\r\n    post: [],\r\n    isLoading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const loadPosts = async () => {\r\n      try {\r\n        const response = await fetch(`${API}posts?slug=${slug}`);\r\n        if (!response.ok) await setData({ post: [], isLoading: false });\r\n        setData({\r\n          post: await response.json(),\r\n          isLoading: false,\r\n        });\r\n      } catch {\r\n        await setData({ post: [], isLoading: false });\r\n      }\r\n    };\r\n\r\n    loadPosts();\r\n  }, [slug]);\r\n\r\n  if (!data.isLoading && data.post.length === 0)\r\n    return <Redirect to={{ pathname: \"/404\" }} />;\r\n\r\n  return (\r\n    <>\r\n      {data.isLoading ? (\r\n        <Preloader />\r\n      ) : (\r\n        <Suspense fallback={<Preloader />}>\r\n          <PostContent post={data.post[0]} />\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"sourceRoot":""}