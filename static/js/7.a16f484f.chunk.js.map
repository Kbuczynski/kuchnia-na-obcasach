{"version":3,"sources":["components/Post/InfinitePosts.js","assets/slider/slider-1.jpg","assets/slider/slider-2.jpg","assets/slider/slider-3.jpg","components/Slider.js","components/Home.js","functions/prettierTitle.js","functions/changeDateType.js","components/Post/PostPrev.js"],"names":["InfinitePosts","className","type","categoryId","postsContainer","useRef","useState","posts","isLoading","countPosts","data","setData","offset","setOffset","oldCatId","setOldCatId","newVisit","setNewVisit","timeoutId","setTimeoutId","isError","setIsError","useEffect","abortController","AbortController","signal","sessionStorage","getItem","setItem","JSON","stringify","loadPosts","a","ENDPOINT","API","POSTS_PER_PAGE","fetch","response","ok","json","parseInt","headers","get","addOffset","intersectionObserver","IntersectionObserver","entries","intersectionRatio","currentTimeoutId","setTimeout","cachedData","parse","length","window","location","reload","observe","current","abort","disconnect","clearTimeout","handleCache","ref","map","post","index","key","module","exports","AutoplaySlider","withAutoplay","AwesomeSlider","Slider","play","cancelOnInteraction","interval","cssModule","AwesomeSliderStyles","data-src","img1","alt","img3","img2","Home","prettierTitle","title","toLowerCase","indexOf","replace","toUpperCase","slice","changeDateType","date","dateArr","split","PostPrev","images","image","setImage","id","loadImage","to","slug","onClick","undefined","height","media_details","sizes","large","src","source_url","width","effect","rendered"],"mappings":"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","file":"static/js/7.a16f484f.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { API, POSTS_PER_PAGE } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nimport PostPrev from \"./PostPrev\";\r\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\r\n\r\nconst InfinitePosts = ({ className, type = \"home\", categoryId = 0 }) => {\r\n  const TIMEOUT = 1000;\r\n  const postsContainer = useRef();\r\n\r\n  const [data, setData] = useState({\r\n    posts: [],\r\n    isLoading: true,\r\n    countPosts: 0,\r\n  });\r\n  const [offset, setOffset] = useState(0);\r\n  const [oldCatId, setOldCatId] = useState(categoryId);\r\n  const [newVisit, setNewVisit] = useState(true);\r\n  const [timeoutId, setTimeoutId] = useState(0);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const signal = abortController.signal;\r\n\r\n    if (!sessionStorage.getItem(\"countPosts\") && data.countPosts !== 0)\r\n      sessionStorage.setItem(\"countPosts\", JSON.stringify(data.countPosts));\r\n\r\n    const loadPosts = async () => {\r\n      let ENDPOINT = `${API}posts?per_page=${POSTS_PER_PAGE}&offset=${offset}`;\r\n\r\n      if (type === \"category\") ENDPOINT += `&categories=${oldCatId}`;\r\n      else if (type === \"tag\") ENDPOINT += `&tags=${oldCatId}`;\r\n\r\n      try {\r\n        const response = await fetch(ENDPOINT, { signal: signal });\r\n\r\n        if (!response.ok) return;\r\n\r\n        if (isError) setIsError(false);\r\n\r\n        setData({\r\n          posts: [...data.posts, ...(await response.json())],\r\n          isLoading: false,\r\n          countPosts: parseInt(response.headers.get(\"X-WP-Total\"), 10),\r\n        });\r\n      } catch {\r\n        setIsError(true);\r\n      }\r\n    };\r\n\r\n    const addOffset = () => setOffset(offset + POSTS_PER_PAGE);\r\n\r\n    const intersectionObserver = new IntersectionObserver((entries) => {\r\n      if (entries[0].intersectionRatio > 0) {\r\n        const currentTimeoutId = setTimeout(addOffset, TIMEOUT);\r\n        setTimeoutId(currentTimeoutId);\r\n      }\r\n    });\r\n\r\n    if (sessionStorage.getItem(`${type}`) && newVisit) {\r\n      const cachedData = JSON.parse(sessionStorage.getItem(`${type}`));\r\n      setData({\r\n        posts: [...cachedData.posts],\r\n        isLoading: false,\r\n        countPosts: parseInt(cachedData.countPosts, 10),\r\n      });\r\n      setOffset(cachedData.posts.length);\r\n    }\r\n\r\n    if (!isError) {\r\n      if (\r\n        !data.isLoading &&\r\n        data.countPosts === data.posts.length &&\r\n        categoryId === oldCatId\r\n      )\r\n        return;\r\n\r\n      if (data.posts.length <= data.countPosts || categoryId !== oldCatId) {\r\n        if (categoryId !== oldCatId) {\r\n          window.location.reload();\r\n          setOldCatId(categoryId);\r\n        }\r\n        intersectionObserver.observe(postsContainer.current);\r\n\r\n        if (!sessionStorage.getItem(`${type}`)) loadPosts();\r\n        else if (!newVisit) loadPosts();\r\n      }\r\n\r\n      if (sessionStorage.getItem(`${type}`) && newVisit) setNewVisit(false);\r\n    }\r\n\r\n    return () => {\r\n      abortController.abort();\r\n      intersectionObserver.disconnect();\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [offset, categoryId, type]);\r\n\r\n  const handleCache = () => {\r\n    type === \"home\" && sessionStorage.setItem(`${type}`, JSON.stringify(data));\r\n    clearTimeout(timeoutId);\r\n  };\r\n\r\n  return (\r\n    <div className={className} ref={postsContainer}>\r\n      {data.isLoading ? (\r\n        <Preloader />\r\n      ) : data.posts.length === 0 ? (\r\n        <p>Brak post√≥w</p>\r\n      ) : (\r\n        data.posts.map((post, index) => {\r\n          return (\r\n            <LazyLoadComponent key={index}>\r\n              <PostPrev post={post} handleCache={handleCache} />\r\n            </LazyLoadComponent>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfinitePosts;\r\n","module.exports = __webpack_public_path__ + \"static/media/slider-1.005deb6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-2.732cc673.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slider-3.f59a09a8.jpg\";","import React from \"react\";\r\nimport AwesomeSlider from \"react-awesome-slider\";\r\nimport withAutoplay from \"../../node_modules/react-awesome-slider/dist/autoplay\";\r\nimport AwesomeSliderStyles from \"../../node_modules/react-awesome-slider/src/styles\";\r\nimport img1 from \"../assets/slider/slider-1.jpg\";\r\nimport img2 from \"../assets/slider/slider-2.jpg\";\r\nimport img3 from \"../assets/slider/slider-3.jpg\";\r\n\r\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\r\n\r\nconst Slider = () => {\r\n  return (\r\n    <AutoplaySlider\r\n      play={true}\r\n      cancelOnInteraction={false}\r\n      interval={5000}\r\n      cssModule={AwesomeSliderStyles}\r\n      className=\"slider\"\r\n    >\r\n      <div data-src={img1} className=\"slider__item\" alt=\"Ciasto z porzeczkami\">Smacznie</div>\r\n      <div data-src={img3} className=\"slider__item\" alt=\"deser malinowy\">Zdrowo</div>\r\n      <div data-src={img2} className=\"slider__item\" alt=\"Babka z porzeczkami\">Sezonowo</div>\r\n    </AutoplaySlider>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport Slider from \"./Slider\";\r\nimport InfinitePosts from \"./Post/InfinitePosts\";\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <header className=\"home__header\">\r\n        <Slider />\r\n      </header>\r\n      <main className=\"home__posts\">\r\n        <div className=\"home__posts__title\">\r\n          <h2>Najnowsze posty</h2>\r\n        </div>\r\n        <InfinitePosts className={\"home__posts__container\"} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const prettierTitle = (title) => {\r\n    title = title.toLowerCase();\r\n\r\n    if (title.indexOf(\"&#8220;\") !== -1) title = title.replace(\"&#8220;\", `\"`);\r\n    if (title.indexOf(\"&#8221;\") !== -1) title = title.replace(\"&#8221;\", `\"`);\r\n    if (title.indexOf(\"&#8211;\") !== -1) title = title.replace(\"&#8211;\", `-`);\r\n    \r\n    return `${title[0].toUpperCase()}${title.slice(1)}`; \r\n}\r\n \r\nexport default prettierTitle;","const changeDateType = (date) => {\r\n    const dateArr = date.split(\"T\");\r\n    return `${dateArr[0].split(\"-\")[2]}-${dateArr[0].split(\"-\")[1]}-${dateArr[0].split(\"-\")[0]}`\r\n}\r\n\r\nexport default changeDateType;","import React, { useState, useEffect } from \"react\";\r\nimport prettierTitle from \"../../functions/prettierTitle\";\r\nimport changeDateType from \"../../functions/changeDateType\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API } from \"../../data\";\r\nimport Preloader from \"../Preloader\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\nimport 'react-lazy-load-image-component/src/effects/blur.css';\r\n\r\nconst PostPrev = ({ post, handleCache }) => {\r\n  const [image, setImage] = useState({ images: [], isLoading: true });\r\n\r\n  useEffect(() => {\r\n    const loadImage = async () => {\r\n      try {\r\n        const response = await fetch(`${API}media?parent=${post.id}`);\r\n        if (!response.ok) return;\r\n        setImage({ images: await response.json(), isLoading: false });\r\n      } catch {\r\n        return;\r\n      }\r\n    };\r\n\r\n    loadImage();\r\n  }, [post]);\r\n  \r\n  return (\r\n    <Link to={`/wpisy/${post.slug}`} className=\"postPrev\" onClick={handleCache}>\r\n      <div className=\"postPrev__content\">\r\n        {image.isLoading ? (\r\n          <Preloader />\r\n        ) : (\r\n          image.images[0] !== undefined && \r\n          <LazyLoadImage\r\n            alt={image.images[0].slug}\r\n            height={image.images[0].media_details.sizes.large.height}\r\n            src={image.images[0].media_details.sizes.large.source_url}\r\n            width={image.images[0].media_details.sizes.large.width}\r\n            effect=\"blur\"\r\n          />\r\n        )}\r\n      </div>\r\n      <h3 className=\"postPrev__title\">{prettierTitle(post.title.rendered)}</h3>\r\n      <p className=\"postPrev__date\">\r\n        {changeDateType(post.date)}&nbsp;<i className=\"icon-calendar\"></i>\r\n      </p>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PostPrev;\r\n"],"sourceRoot":""}