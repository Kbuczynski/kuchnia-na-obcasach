{"version":3,"sources":["components/Post/InfinitePosts.js","functions/changeDateType.js","components/GoogleAd.js","components/Post/PostPrev.js"],"names":["InfinitePosts","className","type","categoryId","postsContainer","useRef","useState","posts","isLoading","countPosts","data","setData","offset","setOffset","newVisit","setNewVisit","timeoutId","setTimeoutId","isError","setIsError","addOffset","POSTS_PER_PAGE","intersectionObserver","IntersectionObserver","entries","intersectionRatio","currentTimeoutId","setTimeout","useEffect","sessionStorage","getItem","cachedData","JSON","parse","length","abortController","AbortController","signal","loadPosts","a","ENDPOINT","API","fetch","response","ok","json","parseInt","headers","get","observe","current","abort","disconnect","clearTimeout","handleCache","setItem","stringify","map","post","index","Fragment","key","id","slot","format","ref","changeDateType","date","dateArr","split","GoogleAd","googleInit","timeout","this","props","window","adsbygoogle","push","classNames","style","display","data-ad-client","GOOGLE_ADS_CLIENT","data-ad-slot","data-ad-format","data-full-width-responsive","Component","PostPrev","images","image","setImage","loadImage","to","slug","onClick","undefined","media_details","sizes","large","alt","height","full","src","source_url","width","effect","prettierTitle","title","rendered"],"mappings":"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","file":"static/js/9.4f482934.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { API, POSTS_PER_PAGE } from \"../../data\";\nimport Preloader from \"../Preloader\";\nimport PostPrev from \"./PostPrev\";\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\nimport GoogleAd from \"../GoogleAd\";\n\nconst InfinitePosts = ({ className, type = \"home\", categoryId = 0 }) => {\n  const TIMEOUT = 1000;\n  const postsContainer = useRef();\n\n  const [data, setData] = useState({\n    posts: [],\n    isLoading: true,\n    countPosts: 0,\n  });\n  const [offset, setOffset] = useState(0);\n  const [newVisit, setNewVisit] = useState(true);\n  const [timeoutId, setTimeoutId] = useState(0);\n  const [isError, setIsError] = useState(false);\n\n  const addOffset = () => setOffset(offset + POSTS_PER_PAGE);\n\n  const intersectionObserver = new IntersectionObserver((entries) => {\n    if (entries[0].intersectionRatio > 0) {\n      const currentTimeoutId = setTimeout(addOffset, TIMEOUT);\n      setTimeoutId(currentTimeoutId);\n    }\n  });\n\n  useEffect(() => {\n    if (type !== \"home\") {\n      setData({ posts: [], isLoading: true, countPosts: 0 });\n      setOffset(0);\n    }\n  }, [categoryId, type]);\n\n  useEffect(() => {\n    if (type === \"home\") {\n      if (sessionStorage.getItem(`${type}`) && newVisit) {\n        const cachedData = JSON.parse(sessionStorage.getItem(`${type}`));\n        setData({\n          posts: [...cachedData.posts],\n          isLoading: false,\n          countPosts: JSON.parse(sessionStorage.getItem(\"countPosts\")),\n        });\n        setOffset(cachedData.posts.length);\n      }\n    }\n  }, [newVisit, type]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    const loadPosts = async () => {\n      let ENDPOINT = `${API}posts?per_page=${POSTS_PER_PAGE}&offset=${offset}`;\n\n      if (type === \"category\") ENDPOINT += `&categories=${categoryId}`;\n      else if (type === \"tag\") ENDPOINT += `&tags=${categoryId}`;\n\n      try {\n        const response = await fetch(ENDPOINT, {\n          signal: signal,\n        });\n\n        if (!response.ok) return;\n\n        if (isError) setIsError(false);\n\n        setData({\n          posts: [...data.posts, ...(await response.json())],\n          isLoading: false,\n          countPosts: parseInt(response.headers.get(\"X-WP-Total\"), 10),\n        });\n      } catch {\n        setIsError(true);\n      }\n    };\n\n    if (!isError) {\n      if (!data.isLoading && data.countPosts === data.posts.length) return;\n\n      if (data.posts.length <= data.countPosts) {\n        intersectionObserver.observe(postsContainer.current);\n\n        if (type === \"home\") {\n          if (!sessionStorage.getItem(`${type}`)) loadPosts();\n          else if (!newVisit) loadPosts();\n        } else {\n          loadPosts();\n          setNewVisit(false);\n        }\n      }\n\n      if (sessionStorage.getItem(`${type}`) && newVisit) setNewVisit(false);\n    }\n\n    return () => {\n      abortController.abort();\n      intersectionObserver.disconnect();\n      clearTimeout(timeoutId);\n    };\n  }, [offset]);\n\n  const handleCache = () => {\n    type === \"home\" && sessionStorage.setItem(`${type}`, JSON.stringify(data));\n    clearTimeout(timeoutId);\n  };\n\n  return (\n    <div className={className}>\n      {data.isLoading ? (\n        <Preloader />\n      ) : data.posts.length === 0 ? (\n        <p>Brak post√≥w</p>\n      ) : (\n        data.posts.map((post, index) => {\n          if (index % 4 === 0 && index !== 0) {\n            return (\n              <React.Fragment key={post.id}>\n                <LazyLoadComponent key={index}>\n                  <GoogleAd\n                    slot={7242566208}\n                    className={`postPrev`}\n                    format={`fluid`}\n                  />\n                </LazyLoadComponent>\n                <LazyLoadComponent key={post.id}>\n                  <PostPrev post={post} handleCache={handleCache} />\n                </LazyLoadComponent>\n              </React.Fragment>\n            );\n          }\n          return (\n            <LazyLoadComponent key={post.id}>\n              <PostPrev post={post} handleCache={handleCache} />\n            </LazyLoadComponent>\n          );\n        })\n      )}\n      <div ref={postsContainer}></div>\n    </div>\n  );\n};\n\nexport default InfinitePosts;\n","const changeDateType = (date) => {\n    const dateArr = date.split(\"T\");\n    return `${dateArr[0].split(\"-\")[2]}-${dateArr[0].split(\"-\")[1]}-${dateArr[0].split(\"-\")[0]}`\n}\n\nexport default changeDateType;","import React, { Component } from \"react\";\nimport { GOOGLE_ADS_CLIENT } from \"../data\";\n\nclass GoogleAd extends Component {\n  googleInit = null;\n\n  componentDidMount() {\n    const { timeout } = this.props;\n    this.googleInit = setTimeout(() => {\n      if (typeof window !== \"undefined\")\n        (window.adsbygoogle = window.adsbygoogle || []).push({});\n    }, timeout);\n  }\n\n  componentWillUnmount() {\n    if (this.googleInit) clearTimeout(this.googleInit);\n  }\n\n  render() {\n    const { classNames, slot, format } = this.props;\n\n    return (\n      <div className={classNames}>\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: \"block\" }}\n          data-ad-client={GOOGLE_ADS_CLIENT}\n          data-ad-slot={slot}\n          data-ad-format={format}\n          data-full-width-responsive=\"true\"\n        ></ins>\n      </div>\n    );\n  }\n}\n\nexport default GoogleAd;\n","import React, { useState, useEffect } from \"react\";\nimport prettierTitle from \"../../functions/prettierTitle\";\nimport changeDateType from \"../../functions/changeDateType\";\nimport { Link } from \"react-router-dom\";\nimport { API } from \"../../data\";\nimport Preloader from \"../Preloader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\n\nconst PostPrev = ({ post, handleCache }) => {\n  const [image, setImage] = useState({ images: [], isLoading: true });\n\n  useEffect(() => {\n    if (sessionStorage.getItem(`image-${post.id}`)) {\n      setImage({ images: JSON.parse(sessionStorage.getItem(`image-${post.id}`)), isLoading: false });\n      return;\n    }\n\n    const loadImage = async () => {\n      try {\n        const response = await fetch(`${API}media?parent=${post.id}`);\n        if (!response.ok) return;\n\n        const data = await response.json();\n\n\n        sessionStorage.setItem(`image-${post.id}`, JSON.stringify(data));\n        setImage({ images: data, isLoading: false });\n      } catch {\n        return;\n      }\n    };\n\n    loadImage();\n  }, [post]);\n\n  return (\n    <Link to={`/wpisy/${post.slug}`} className=\"postPrev\" onClick={handleCache}>\n      <div className=\"postPrev__content\">\n        {image.isLoading ? (\n          <Preloader />\n        ) : image.images[0] !== undefined &&\n          image.images[0].media_details.sizes.large === undefined ? (\n          <LazyLoadImage\n            alt={image.images[0].slug}\n            height={image.images[0].media_details.sizes.full.height}\n            src={image.images[0].media_details.sizes.full.source_url}\n            width={image.images[0].media_details.sizes.full.width}\n            effect=\"blur\"\n          />\n        ) : (\n          image.images[0] !== undefined && (\n            <LazyLoadImage\n              alt={image.images[0].slug}\n              height={image.images[0].media_details.sizes.large.height}\n              src={image.images[0].media_details.sizes.large.source_url}\n              width={image.images[0].media_details.sizes.large.width}\n              effect=\"blur\"\n            />\n          )\n        )}\n      </div>\n      <h3 className=\"postPrev__title\">{prettierTitle(post.title.rendered)}</h3>\n      <p className=\"postPrev__date\">\n        {changeDateType(post.date)}&nbsp;<i className=\"icon-calendar\"></i>\n      </p>\n    </Link>\n  );\n};\n\nexport default PostPrev;\n"],"sourceRoot":""}